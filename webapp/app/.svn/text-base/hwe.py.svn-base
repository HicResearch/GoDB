# Derived from code originally written in C by J, Wiggington:
# Available at: http://csg.sph.umich.edu//abecasis/Exact/snp_hwe.c
# The following comments were preserved:
#/*
#// This code implements an exact SNP test of Hardy-Weinberg Equilibrium as described in
#// Wigginton, JE, Cutler, DJ, and Abecasis, GR (2005) A Note on Exact Tests of 
#// Hardy-Weinberg Equilibrium. American Journal of Human Genetics. 76: 000 - 000  
#//
#// Written by Jan Wigginton
#*/
def HWE_exact(obs_hets, obs_hom1, obs_hom2, num_samples):
  if obs_hom1 < 0 or obs_hom2 < 0 or obs_hets < 0:
    raise Exception("FATAL ERROR - SNP-HWE: Current genotype configuration (%s  %s %s) includes negative count" % (obs_hets, obs_hom1, obs_hom2))

  obs_homc = obs_hom2 if obs_hom1 < obs_hom2 else obs_hom1
  obs_homr = obs_hom1 if obs_hom1 < obs_hom2 else obs_hom2

  #print "hom minor: ", obs_homr
  #print "hom major: ", obs_homc
  #print "het      : ", obs_hets

  rare_copies = 2 * obs_homr + obs_hets
  #genotypes = obs_hets + obs_homc + obs_homr
  genotypes = num_samples

  #print rare_copies, genotypes
  het_probs = [0.0] * (rare_copies + 1)

  #print "het_probs len at start: ", len(het_probs)
  #print "het_probs at start: ", het_probs
  #start at midpoint
  mid = rare_copies * (2 * genotypes - rare_copies) / (2 * genotypes)
  #print "mid(1):", mid

  #check to ensure that midpoint and rare alleles have same parity
  #print (rare_copies & 1) ^ (mid & 1)
  if (rare_copies & 1) ^ (mid & 1):
    mid += 1

  #print "mid(2):", mid
  curr_hets = mid
  curr_homr = (rare_copies - mid) / 2
  curr_homc = genotypes - curr_hets - curr_homr

  het_probs[mid] = 1.0
  sum = float(het_probs[mid])

  for curr_hets in xrange(mid, 1, -2):
    het_probs[curr_hets - 2] = het_probs[curr_hets] * curr_hets * (curr_hets - 1.0) / (4.0 * (curr_homr + 1.0) * (curr_homc + 1.0))

    sum += het_probs[curr_hets - 2];

    # 2 fewer heterozygotes for next iteration -> add one rare, one common homozygote
    curr_homr += 1
    curr_homc += 1
  curr_hets = mid
  curr_homr = (rare_copies - mid) / 2
  curr_homc = genotypes - curr_hets - curr_homr

  for curr_hets in xrange(mid, rare_copies - 1, 2):

    het_probs[curr_hets + 2] = het_probs[curr_hets] * 4.0 * curr_homr * curr_homc / ((curr_hets + 2.0) * (curr_hets + 1.0))

    sum += het_probs[curr_hets + 2]

    #add 2 heterozygotes for next iteration -> subtract one rare, one common homozygote
    curr_homr -= 1
    curr_homc -= 1

  for i in xrange(0, rare_copies + 1):
    het_probs[i] /= sum

  #alternate p-value calculation for p_hi/p_lo
  p_hi = float(het_probs[obs_hets])
  for i in xrange(obs_hets, rare_copies+1):
    p_hi += het_probs[i]

  p_lo = float(het_probs[obs_hets])
  for i in xrange(obs_hets-1, -1, -1):
    p_lo += het_probs[i]

  p_hi_lo = 2.0 * p_hi if p_hi < p_lo else 2.0 * p_lo

  p_hwe = 0.0
  #  p-value calculation for p_hwe
  for i in xrange(0, rare_copies + 1):
    if het_probs[i] > het_probs[obs_hets]:
      continue;
    p_hwe += het_probs[i]

  p_hwe = 1.0 if p_hwe > 1.0 else p_hwe

  return "%.8f" % (p_hwe)

def hwe_check(hets, hom1, hom2):
  minor_obs = 0
  major_obs = 0
  if hom1 > hom2:
    minor_obs = hom2
    major_obs = hom1
  else:
    minor_obs = hom1
    major_obs = hom2

  num_gt = hets + hom1 + hom2
  minor_freq = ((2 * minor_obs) + hets) / (num_gt * 2.0) 
  major_freq = ((2 * major_obs) + hets) / (num_gt * 2.0) 
  print (major_freq * major_freq)
  print (2 * major_freq * minor_freq)
  print (minor_freq * minor_freq)

  return((major_freq * major_freq) + (2 * major_freq * minor_freq) + (minor_freq * minor_freq))

def hwe_simple(hets, hom1, hom2):
  minor_obs = 0
  major_obs = 0
  if hom1 > hom2:
    minor_obs = hom2
    major_obs = hom1
  else:
    minor_obs = hom1
    major_obs = hom2

  num_gt = hets + hom1 + hom2

if __name__ == "__main__":
  print HWE_exact(100, 3, 5) 
  print "--------------------"
  print HWE_exact(57, 14, 50) 
  print "--------------------"
  print HWE_exact(31, 32, 51) 
  print "--------------------"
  print HWE_exact(47, 3, 5) 
  print "--------------------"
  print HWE_exact(150, 32, 55) 
  print "--------------------"
  print HWE_exact(122, 7, 32) 
  print "--------------------"
  print HWE_exact(99, 3, 14) 
  print "--------------------"
  print HWE_exact(146, 13, 54) 
  print "--------------------"
  print HWE_exact(177, 100, 57) 
  print "--------------------"
  print HWE_exact(184, 57, 155) 
  print "--------------------"
  print HWE_exact(921, 5452, 31) 
  print "--------------------"
  print HWE_exact(762, 269, 618) 








